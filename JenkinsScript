pipeline {
    agent any

    environment {
        NETLIFY_SITE_ID = 'd72e93bf-7f3a-432b-9c5f-71adb5f72c77'
        NETLIFY_AUTH_TOKEN = 'nfp_tVmKvdMgKMHvuTEXVcoNWm6Tpcds9RWYd3aa'
    }

    stages {
        stage('Declarative: Checkout SCM') {
            steps {
                checkout scm
            }
        }

        stage('Checkout') {
            steps {
                script {
                    git url: 'https://github.com/CodeSnake-wq/SIT223_6.2hd.git', branch: 'main'
                }
            }
        }

        stage('Build Image') {
            steps {
                script {
                    bat 'docker build -t aakash:1.0 .'
                }
            }
        }

        stage('Code Quality Analysis') {
            steps {
                sh 'docker run --rm aakash:1.0 npm run lint'
            }
        }


        stage('Deploy to Test Environment') {
            steps {
                script {
                    // Deploy using Docker Compose to a staging environment
                    bat 'docker-compose down || true'  // Stop any previous instance
                    bat 'docker-compose up -d'         // Start the container in detached mode
                }
            }
        }

        stage('Test') {
            steps {
                script {
                    bat 'npm install'

                    // Start the application in a new terminal
                    bat 'start cmd /c "npm start"'

                    // Run Selenium tests in a separate terminal
                    bat 'start cmd /c "node tests/selenium.test.js"'

                    // Wait for a few seconds using sleep
                    sleep(time: 10, unit: 'SECONDS')
                }
            }
        }

        stage('Build') {
            steps {
                script {
                    bat 'npm run build'
                }
            }
        }

        

        stage('Deploy to Netlify') {
            steps {
                script {
                    bat """
                    npx netlify deploy --dir=./build --prod --auth=${NETLIFY_AUTH_TOKEN} --site=${NETLIFY_SITE_ID}
                    """
                }
            }
        }
    }

    post {
        always {
            echo 'Pipeline execution completed.'
        }
        failure {
            echo 'Pipeline failed. Please check logs for details.'
        }
    }
}
